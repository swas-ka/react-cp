{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a5cf9ad.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nconst Button = ({ color, text, onClick }) => {\r\n    return ( \r\n        <button onClick={onClick} style={{ backgroundColor: color}} className='btn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\nButton.defaultProps = {\r\n    color:'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\n\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1> {title} </h1>\r\n            <Button\r\n                color={showAdd ? 'red' : 'green'}\r\n                text={showAdd ? 'Close' : 'Add'}\r\n                onClick={onAdd}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n// css in js\r\n// const HeadingStyle = {\r\n//     color:'red',\r\n//     backgroundColor:'black',\r\n// }\r\n\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : '' }`} onDoubleClick={() => onToggle(task.id)}> \r\n            <h3> \r\n                { task.text } {' '}  <FaTimes style = {{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p> { task.day } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n\r\n","import Task from './Task';\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task \r\n                    key={task.id} \r\n                    task={task} \r\n                    onDelete={onDelete} \r\n                    onToggle={onToggle}  \r\n                /> \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>  Task   </label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>  Day & Time   </label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>  Set Reminder </label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(true)\n\n  const [tasks, setTasks] = useState([\n\n    {\n      id: 1,\n      text: 'Doctors Appoinment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n\n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: true,\n    },\n\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: 'Feb 5th at 2:30pm',\n      reminder: false,\n    },\n\n  ])\n\n  // Add Task \n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n\n  }\n\n\n\n\n\n\n\n\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n\n  }\n\n  // Toggle remainder\n  const toggleRemainder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? {\n          ...task, reminder:\n            !task.reminder\n        } : task\n      )\n\n    )\n\n  }\n\n\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      { showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRemainder} />) : ('No Tasks To Show')}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}